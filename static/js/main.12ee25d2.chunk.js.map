{"version":3,"sources":["bridge-logo-1.svg","Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["console","log","logo","Navbar","className","src","style","height","width","alt","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,MAA0B,0C,OCGzCA,QAAQC,IAAIC,GACZ,IAaeC,EAbA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKC,IAAKH,EAAMI,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAAOC,IAAI,SACxD,sBAAKL,UAAU,QAAf,UACE,cAAC,IAAD,CAAMM,GAAG,IAAT,kBAEA,cAAC,IAAD,CAAMA,GAAG,UAAT,6BCUOC,EAnBE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAIzB,OACE,sBAAKT,UAAU,YAAf,UACE,6BAAKS,IACJD,EAAME,KAAI,SAAAC,GAAI,OACf,qBAAKX,UAAU,eAAf,SACE,eAAC,IAAD,CAAMM,GAAE,iBAAYK,EAAKC,IAAzB,UACD,6BAAKD,EAAKF,QACV,4CAAeE,EAAKE,cAHcF,EAAKC,W,OC2B/BE,EAnCE,SAACC,GACd,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACF,EAAiCF,oBAAS,GAA1C,mBAAMG,EAAN,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA6BI,OA3BFC,qBAAU,WACR,IAAMC,EAAY,IAAIC,gBAuBpB,OAtBAC,YAAW,WACTC,MAAMZ,EAAK,CAAEa,OAAQJ,EAAUI,SAChCC,MAAK,SAAAC,GACJ,IAAIA,EAAIC,GACN,MAAMC,MAAM,8CAEd,OAAOF,EAAIG,UAEZJ,MAAK,SAAAZ,GACJC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEVY,OAAM,SAAAC,GACY,eAAbA,EAAIC,KACNxC,QAAQC,IAAI,kBAEduB,GAAa,GACbE,EAASa,EAAIE,eAGZ,KACI,kBAAMb,EAAUc,WACtB,CAACvB,IAEG,CAAEE,OAAME,YAAWE,UCjBjBkB,EAdF,WACX,MAA0CzB,EAAS,+BAArCN,EAAd,EAAQS,KAAaE,EAArB,EAAqBA,UAAWE,EAAhC,EAAgCA,MAGhC,OACE,sBAAKrB,UAAU,OAAf,UACIqB,GAAS,8BAAOA,IAChBF,GAAa,6CACdX,GAAS,cAAC,EAAD,CAAUA,MAAOA,EAAOC,MAAM,mB,OCgD/B+B,EAxDA,WACb,MAA0BxB,mBAAS,IAAnC,mBAAOP,EAAP,KAAcgC,EAAd,KACA,EAAwBzB,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KACA,EAA4B3B,mBAAS,IAArC,mBAAOH,EAAP,KAAe+B,EAAf,KACA,EAAkC5B,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMyB,EAAUC,cAmBhB,OACE,sBAAK9C,UAAU,SAAf,UACE,gDACA,uBAAM+C,SApBW,SAACC,GACpBA,EAAEC,iBACF,IAAMtC,EAAO,CAAEF,QAAOiC,OAAM7B,UAE5BO,GAAa,GAEbO,MAAM,8BAA+B,CACnCuB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BT,KAAMU,KAAKC,UAAU1C,KACpBkB,MAAK,WACNjC,QAAQC,IAAI,kBACZuB,GAAa,GAEbyB,EAAQS,KAAK,SAMb,UACE,gDACA,uBACEC,KAAK,OACLC,UAAQ,EACRC,MAAOhD,EACPiD,SAAU,SAACV,GAAD,OAAOP,EAASO,EAAEW,OAAOF,UAErC,+CACA,0BACED,UAAQ,EACRC,MAAOf,EACPgB,SAAU,SAACV,GAAD,OAAOL,EAAQK,EAAEW,OAAOF,UAEpC,iDACA,yBAAQA,MAAO5C,EAAQ6C,SAAU,SAACV,GAAD,OAAOJ,EAAUI,EAAEW,OAAOF,QAA3D,UACE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,uBAEAtC,GAAa,8CACdA,GAAa,wBAAQyC,UAAQ,EAAhB,yBACd,4BAAInD,IACJ,4BAAIiC,IACJ,4BAAI7B,WClBGgD,EAhCK,WAClB,IAAQjD,EAAOkD,cAAPlD,GACR,EAIIE,EAAS,+BAAiCF,GAHtCD,EADR,EACEM,KACAI,EAFF,EAEEA,MACAF,EAHF,EAGEA,UAEI0B,EAAUC,cAShB,OACE,sBAAK9C,UAAU,eAAf,UACGmB,GAAa,6CACbE,GAAS,8BAAMA,IACfV,GACC,oCACE,6BAAKA,EAAKF,QACV,4CAAeE,EAAKE,UACpB,8BAAMF,EAAK+B,OACX,wBAAQqB,QAhBI,WAClBpC,MAAM,+BAAiChB,EAAKC,GAAI,CAC9CsC,OAAQ,WACPrB,MAAK,WACNgB,EAAQS,KAAK,SAYT,2BChBKU,EAVE,WACf,OACE,sBAAKhE,UAAU,YAAf,UACE,uCACA,0DACA,cAAC,IAAD,CAAMM,GAAG,IAAT,yCC2BS2D,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKjE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCpBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12ee25d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bridge-logo-1.604168ca.svg\";","import { Link } from \"react-router-dom\";\nimport logo from \"./bridge-logo-1.svg\";\n\nconsole.log(logo);\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <img src={logo} style={{ height: 540, width: 168 }} alt=\"Logo\" />\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n\n        <Link to=\"/create\">New Blog</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs, title }) => {\n  // const blogs = props.blogs;\n  //  const title = props.title;\n\n  return (\n    <div className=\"blog-list\">\n      <h2>{title}</h2>\n      {blogs.map(blog => (\n      <div className=\"blog-preview\" key={blog.id}>\n        <Link to={`/blogs/${blog.id}`}>\n       <h2>{blog.title}</h2>\n       <p>Written by {blog.author}</p></Link>\n     </div>\n       \n      ))}\n    </div>\n  );\n};\n\nexport default BlogList;\n","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n  const[isPending, setIsPending] = useState(true); \n  const [error, setError] = useState(null);\n\n    useEffect(() => {\n      const abortCont = new AbortController();\n        setTimeout(() => {\n          fetch(url, { signal: abortCont.signal })\n        .then(res => {\n          if(!res.ok) {\n            throw Error('could not fetch the data for that resource');\n          }\n          return res.json();\n        })\n        .then(data => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch(err => { \n          if (err.name === 'AbortError') {\n            console.log('fetch aborted')\n          } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n        })\n        }, 1000);\n        return () => abortCont.abort();\n      }, [url]); \n\n      return { data, isPending, error };\n}\n\nexport default useFetch;","import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n  const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\n \n\n  return (\n    <div className=\"home\">\n      { error && <div>{ error }</div> } \n      { isPending && <div>...Loading</div> }\n      {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\n  \n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n\n    setIsPending(true);\n\n    fetch(\"http://localhost:8000/blogs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      console.log(\"new blog added\");\n      setIsPending(false);\n      /* history.go(-1);*/\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"create\">\n      <h2>Add a New Blog</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Blog Title:</label>\n        <input\n          type=\"text\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Blog Body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <label>Blog Author:</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"mario\">mario</option>\n          <option value=\"luigi\">luigi</option>\n        </select>\n        {!isPending && <button>Add Blog</button>}\n        {isPending && <button disabled>Add Blog...</button>}\n        <p>{title}</p>\n        <p>{body}</p>\n        <p>{author}</p>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const {\n    data: blog,\n    error,\n    isPending,\n  } = useFetch(\"http://localhost:8000/blogs/\" + id);\n  const history = useHistory();\n\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\",\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div className=\"blog-details\">\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {blog && (\n        <article>\n          <h2>{blog.title}</h2>\n          <p>Written by {blog.author}</p>\n          <div>{blog.body}</div>\n          <button onClick={handleClick}>Delete</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>That page cannot be found</p>\n      <Link to=\"/\">Back to the homepage...</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import \"./index.css\";\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport BlogDetails from \"./BlogDetails\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}